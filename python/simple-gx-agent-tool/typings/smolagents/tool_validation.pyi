"""
This type stub file was generated by pyright.
"""

import ast

_BUILTIN_NAMES = ...
class MethodChecker(ast.NodeVisitor):
    """
    Checks that a method
    - only uses defined names
    - contains no local imports (e.g. numpy is ok but local_script is not)
    """
    def __init__(self, class_attributes: set[str], check_imports: bool = ...) -> None:
        ...
    
    def visit_arguments(self, node): # -> None:
        """Collect function arguments"""
        ...
    
    def visit_Import(self, node): # -> None:
        ...
    
    def visit_ImportFrom(self, node): # -> None:
        ...
    
    def visit_Assign(self, node): # -> None:
        ...
    
    def visit_With(self, node): # -> None:
        """Track aliases in 'with' statements (the 'y' in 'with X as y')"""
        ...
    
    def visit_ExceptHandler(self, node): # -> None:
        """Track exception aliases (the 'e' in 'except Exception as e')"""
        ...
    
    def visit_AnnAssign(self, node): # -> None:
        """Track annotated assignments."""
        ...
    
    def visit_For(self, node): # -> None:
        ...
    
    def visit_ListComp(self, node): # -> None:
        """Track variables in list comprehensions"""
        ...
    
    def visit_DictComp(self, node): # -> None:
        """Track variables in dictionary comprehensions"""
        ...
    
    def visit_SetComp(self, node): # -> None:
        """Track variables in set comprehensions"""
        ...
    
    def visit_Attribute(self, node): # -> None:
        ...
    
    def visit_ClassDef(self, node): # -> None:
        """Track class definitions"""
        ...
    
    def visit_Name(self, node): # -> None:
        ...
    
    def visit_Call(self, node): # -> None:
        ...
    


def validate_tool_attributes(cls, check_imports: bool = ...) -> None:
    """
    Validates that a Tool class follows the proper patterns:
    0. Any argument of __init__ should have a default.
    Args chosen at init are not traceable, so we cannot rebuild the source code for them, thus any important arg should be defined as a class attribute.
    1. About the class:
        - Class attributes should only be strings or dicts
        - Class attributes cannot be complex attributes
    2. About all class methods:
        - Imports must be from packages, not local files
        - All methods must be self-contained

    Raises all errors encountered, if no error returns None.
    """
    class ClassLevelChecker(ast.NodeVisitor):
        ...
    
    

